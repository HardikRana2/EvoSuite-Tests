/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Tue Jun 21 14:44:06 GMT 2022
 */

package net.finmath.montecarlo;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class BrownianMotionFromMersenneRandomNumbers_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "net.finmath.montecarlo.BrownianMotionFromMersenneRandomNumbers"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "Cp1252"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "C:\\Users\\HARDIK~1\\AppData\\Local\\Temp\\"); 
    java.lang.System.setProperty("user.country", "IN"); 
    java.lang.System.setProperty("user.dir", "C:\\Users\\Hardik Rana\\Intellij_projects\\finmath-lib"); 
    java.lang.System.setProperty("user.home", "C:\\Users\\Hardik Rana"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "Hardik Rana"); 
    java.lang.System.setProperty("user.timezone", "Asia/Calcutta"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(BrownianMotionFromMersenneRandomNumbers_ESTest_scaffolding.class.getClassLoader() ,
      "net.finmath.montecarlo.IndependentIncrements",
      "net.finmath.functions.NormalDistribution",
      "net.finmath.time.TimeDiscretizationFromArray$3",
      "net.finmath.time.TimeDiscretizationFromArray$2",
      "net.finmath.time.TimeDiscretizationFromArray$1",
      "net.finmath.montecarlo.RandomVariableFloatFactory",
      "org.apache.commons.math3.random.RandomDataImpl",
      "org.apache.commons.math3.random.AbstractWell",
      "org.apache.commons.math3.exception.MathArithmeticException",
      "net.finmath.stochastic.Scalar",
      "net.finmath.montecarlo.RandomVariableFromFloatArray",
      "org.apache.commons.math3.exception.OutOfRangeException",
      "org.apache.commons.math3.util.FastMath$lnMant",
      "org.apache.commons.math3.exception.MathInternalError",
      "net.finmath.randomnumbers.RandomNumberGenerator",
      "org.apache.commons.math3.exception.MathIllegalArgumentException",
      "org.apache.commons.math3.util.FastMath",
      "net.finmath.time.TimeDiscretizationFromArray",
      "org.apache.commons.math3.exception.NumberIsTooLargeException",
      "net.finmath.time.TimeDiscretizationFromArray$ShortPeriodLocation",
      "net.finmath.stochastic.ConditionalExpectationEstimator",
      "org.apache.commons.math3.random.Well19937c",
      "org.apache.commons.math3.exception.NotStrictlyPositiveException",
      "org.apache.commons.math3.distribution.NormalDistribution",
      "org.apache.commons.math3.random.MersenneTwister",
      "org.apache.commons.math3.analysis.UnivariateFunction",
      "org.apache.commons.math3.distribution.RealDistribution",
      "org.apache.commons.math3.exception.NotFiniteNumberException",
      "net.finmath.montecarlo.RandomVariableLazyEvaluationFactory",
      "net.finmath.montecarlo.BrownianMotion",
      "org.apache.commons.math3.exception.util.ExceptionContextProvider",
      "net.finmath.time.Tenor",
      "org.apache.commons.math3.distribution.AbstractRealDistribution",
      "org.apache.commons.math3.exception.NotANumberException",
      "net.finmath.functions.DoubleTernaryOperator",
      "org.apache.commons.math3.random.RandomData",
      "org.apache.commons.math3.exception.NumberIsTooSmallException",
      "org.apache.commons.math3.exception.MathIllegalStateException",
      "net.finmath.stochastic.RandomVariable",
      "org.apache.commons.math3.random.BitsStreamGenerator",
      "net.finmath.time.TimeDiscretization",
      "net.finmath.time.TenorFromArray",
      "net.finmath.randomnumbers.RandomNumberGenerator1D",
      "net.finmath.montecarlo.RandomVariableFromDoubleArray",
      "net.finmath.montecarlo.AbstractRandomVariableFactory",
      "org.apache.commons.math3.exception.MathIllegalNumberException",
      "net.finmath.randomnumbers.MersenneTwister",
      "org.apache.commons.math3.exception.util.Localizable",
      "net.finmath.montecarlo.RandomVariableFromArrayFactory",
      "org.apache.commons.math3.random.RandomDataGenerator",
      "org.apache.commons.lang3.Validate",
      "net.finmath.stochastic.RandomOperator",
      "org.apache.commons.math3.random.RandomGenerator",
      "net.finmath.montecarlo.BrownianMotionFromMersenneRandomNumbers",
      "org.apache.commons.math3.util.FastMathLiteralArrays",
      "net.finmath.montecarlo.RandomVariableFactory"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(BrownianMotionFromMersenneRandomNumbers_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "net.finmath.montecarlo.BrownianMotionFromMersenneRandomNumbers",
      "net.finmath.integration.PiecewiseContantDoubleUnaryOperator",
      "org.apache.commons.lang3.ArrayUtils",
      "org.apache.commons.lang3.Validate",
      "net.finmath.time.TimeDiscretizationFromArray",
      "net.finmath.stochastic.Scalar",
      "net.finmath.montecarlo.AbstractRandomVariableFactory",
      "net.finmath.montecarlo.RandomVariableFromArrayFactory",
      "net.finmath.montecarlo.RandomVariableLazyEvaluationFactory",
      "net.finmath.time.TimeDiscretizationFromArray$1",
      "net.finmath.randomnumbers.MersenneTwister",
      "org.apache.commons.math3.random.BitsStreamGenerator",
      "org.apache.commons.math3.random.MersenneTwister",
      "org.apache.commons.math3.util.FastMath",
      "net.finmath.montecarlo.RandomVariableFloatFactory",
      "net.finmath.time.TenorFromArray",
      "net.finmath.time.TimeDiscretizationFromArray$2",
      "net.finmath.interpolation.BiLinearInterpolation",
      "org.apache.commons.math3.distribution.AbstractRealDistribution",
      "org.apache.commons.math3.distribution.NormalDistribution",
      "org.apache.commons.math3.random.AbstractWell",
      "org.apache.commons.math3.random.Well19937c",
      "org.apache.commons.math3.random.RandomDataImpl",
      "org.apache.commons.math3.random.RandomDataGenerator",
      "org.apache.commons.math3.util.FastMathLiteralArrays",
      "org.apache.commons.math3.util.FastMath$lnMant",
      "net.finmath.functions.NormalDistribution",
      "net.finmath.time.TimeDiscretizationFromArray$3",
      "net.finmath.montecarlo.RandomVariableLazyEvaluation",
      "net.finmath.montecarlo.RandomVariableFromFloatArray",
      "net.finmath.interpolation.RationalFunctionInterpolation",
      "net.finmath.interpolation.RationalFunctionInterpolation$1",
      "net.finmath.interpolation.RationalFunctionInterpolation$RationalFunction",
      "net.finmath.montecarlo.RandomVariableFromDoubleArray",
      "net.finmath.stochastic.RandomVariableArrayImplementation",
      "net.finmath.randomnumbers.VanDerCorputSequence",
      "net.finmath.randomnumbers.SobolSequence1D",
      "net.finmath.randomnumbers.SobolSequence",
      "org.apache.commons.math3.util.FastMath$Split",
      "org.apache.commons.math3.random.SobolSequenceGenerator",
      "net.finmath.time.daycount.DayCountConvention_ACT",
      "net.finmath.time.daycount.DayCountConvention_ACT_365",
      "net.finmath.time.FloatingpointDate",
      "net.finmath.montecarlo.RandomVariableLazyEvaluation$32",
      "net.finmath.montecarlo.conditionalexpectation.MonteCarloConditionalExpectationRegression",
      "net.finmath.montecarlo.conditionalexpectation.MonteCarloConditionalExpectationRegressionLocalizedOnDependents",
      "net.finmath.montecarlo.conditionalexpectation.MonteCarloConditionalExpectationRegression$RegressionBasisFunctionsGiven",
      "org.apache.commons.math3.linear.SingularValueDecomposition",
      "org.apache.commons.math3.linear.RealLinearOperator",
      "org.apache.commons.math3.linear.RealMatrixFormat",
      "org.apache.commons.math3.util.CompositeFormat",
      "org.apache.commons.math3.linear.AbstractRealMatrix",
      "org.apache.commons.math3.linear.Array2DRowRealMatrix",
      "org.apache.commons.math3.util.Precision",
      "org.apache.commons.math3.linear.MatrixUtils",
      "org.apache.commons.math3.util.MathUtils",
      "org.apache.commons.math3.linear.SingularValueDecomposition$Solver",
      "org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor",
      "org.apache.commons.math3.linear.AbstractRealMatrix$5",
      "org.apache.commons.math3.linear.RealVector",
      "org.apache.commons.math3.linear.RealVectorFormat",
      "org.apache.commons.math3.linear.ArrayRealVector",
      "net.finmath.stochastic.RandomVariableArrayImplementation$7",
      "net.finmath.montecarlo.RandomVariableLazyEvaluation$3"
    );
  }
}
