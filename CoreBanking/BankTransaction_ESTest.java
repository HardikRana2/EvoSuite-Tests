/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 13 09:22:11 GMT 2022
 */

package io.diffblue.corebanking.transaction;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.diffblue.corebanking.account.Account;
import io.diffblue.corebanking.client.Client;
import io.diffblue.corebanking.transaction.BankTransaction;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BankTransaction_ESTest extends BankTransaction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Account account0 = new Account((-1L), (Client) null, (-401L));
      BankTransaction bankTransaction0 = new BankTransaction((-1L), (Date) null, account0, account0);
      try { 
        bankTransaction0.executeTransaction();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Trying to take -1 from the existing balance of -401. Not enough funds.
         //
         verifyException("io.diffblue.corebanking.transaction.BankTransaction", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Account account0 = new Account(1L, (Client) null, 0L);
      BankTransaction bankTransaction0 = new BankTransaction(739L, (Date) null, account0, account0);
      String string0 = bankTransaction0.getTarget();
      assertEquals("1", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      Client client0 = new Client("io.diffblue.corebanking.transaction.CashTransaction$CashTransactionType");
      Account account0 = new Account(0L, client0, 0L);
      BankTransaction bankTransaction0 = new BankTransaction(0L, mockDate0, account0, account0);
      String string0 = bankTransaction0.getSource();
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-4504), 2, (-4504));
      BankTransaction bankTransaction0 = new BankTransaction(3152L, mockDate0, (Account) null, (Account) null);
      // Undeclared exception!
      try { 
        bankTransaction0.executeTransaction();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.diffblue.corebanking.transaction.BankTransaction", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      BankTransaction bankTransaction0 = new BankTransaction(0L, mockDate0, (Account) null, (Account) null);
      // Undeclared exception!
      try { 
        bankTransaction0.getTarget();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.diffblue.corebanking.transaction.BankTransaction", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MockDate mockDate0 = new MockDate(21);
      Client client0 = new Client("l");
      Account account0 = new Account(21, client0, 395L);
      account0.closeAccount();
      Account account1 = new Account(0L, client0, 4116L);
      BankTransaction bankTransaction0 = new BankTransaction(21, mockDate0, account0, account1);
      try { 
        bankTransaction0.executeTransaction();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Both accounts must be in an open state.
         //
         verifyException("io.diffblue.corebanking.transaction.BankTransaction", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MockDate mockDate0 = new MockDate(2640, 2640, 2640);
      Client client0 = new Client("Y");
      Account account0 = new Account(2640, client0, 396L);
      BankTransaction bankTransaction0 = new BankTransaction(396L, mockDate0, account0, account0);
      account0.closeAccount();
      try { 
        bankTransaction0.executeTransaction();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Both accounts must be in an open state.
         //
         verifyException("io.diffblue.corebanking.transaction.BankTransaction", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0L);
      Client client0 = new Client("");
      Account account0 = new Account(0L, client0, 0L);
      BankTransaction bankTransaction0 = new BankTransaction(0L, mockDate0, account0, account0);
      bankTransaction0.executeTransaction();
      try { 
        bankTransaction0.executeTransaction();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // This transaction was already executed!
         //
         verifyException("io.diffblue.corebanking.transaction.BankTransaction", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-674L));
      Client client0 = new Client("io.diffblue.corebanking.transaction.BankTransaction");
      Account account0 = new Account(0L, client0, 568L);
      BankTransaction bankTransaction0 = new BankTransaction(0L, mockDate0, (Account) null, account0);
      // Undeclared exception!
      try { 
        bankTransaction0.getSource();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.diffblue.corebanking.transaction.BankTransaction", e);
      }
  }
}
